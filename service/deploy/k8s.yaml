apiVersion: v1
kind: ConfigMap
metadata:
  namespace: service
  name: task-v2-config
data:
  application.yml: |-
    server:
      port: 8080
      compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    spring:
      jackson:
        date-format: ${DATE_FORMAT}
        time-zone: ${TZ}
      application:
        name: task-v2
      output:
        ansi:
          enabled: always
      messages:
          basename: language/message
          encoding: UTF-8
          cache-duration: -1
      jpa:
        open-in-view: false
        hibernate:
          ddl-auto: update
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            default_schema: recruiting_service
      datasource:
         driver-class-name: org.postgresql.Driver
         url: ${DB_URL}
         username: ${DB_USER}
         password: ${DB_PASS}
      flyway:
        schemas:
          - event
        enabled: false
    management:
      endpoints:
        enabled-by-default: false
        web:
          exposure:
            include: prometheus, health
      health:
        livenessstate:
          enabled: true
        readinessstate:
          enabled: true
      endpoint:
        health:
          enabled: true
          show-components: always
        prometheus:
          enabled: true
    logging:
      level:
        io.eventuate: info
        io.eventuate.tram: info
        org.springframework.orm.jpa: info
        org.hibernate.SQL: info
        org.springframework.jdbc.core: info
        org.hibernate.type.descriptor.sql.BasicBinder: trace
    servlet:
        multipart:
          #Enable multipart uploads
          enabled: true
          #Threshold after which files are written to disk.
          file-size-threshold: 2KB
          # total file size cannot exceed 20MB
          max-file-size: 20MB
          # total request size for a multipart/form-data cannot exceed 200MB
          max-request-size: 200MB
    hibernate:
      id:
        new_generator_mappings: false
      hbm2ddl:
        auto: update
      show-sql: true
      listeners:
        envers:
          autoRegister: true
      envers:
        autoRegisterListeners: true
    org:
        hibernate:
          envers:
            audit_table_prefix: task_v2_
            audit_table_suffix: _log
            default_schema: logs
    nspace:
      application: "recruiting-service"
      configType: '{"recruiting_service":{"type":["TASK"],"default":"TASK"}}'
      event: '{"publisher":{"type":["notice","involve"],"notice":{"channel":"notice"},"involve":{"channel":"involve"}},"receiver":{"type":[""]}}'
      service:
        config:
          headers: '{"key":"${API_KEY}","cid":0,"uid":"system"}'
          URL: ${ROUTE_CONTEXT}/config
        storage:
          key: ${API_KEY}
          URL: ${ROUTE_CONTEXT}/storage
        signature:
          key: ${API_KEY}
          URL: ${ROUTE_CONTEXT}/signature
        notice:
          key: ${API_KEY}
          URL: ${ROUTE_CONTEXT}/notice
        user:
          headers: '{"key":"${API_KEY}","cid":0,"uid":"system"}'
          key: ${API_KEY}
          URL: ${ROUTE_CONTEXT}/account
          cache:
            expires: 5
            expiresAfter: write
        task:
          key: ${API_KEY}
          URL: ${ROUTE_CONTEXT}/task
          cache:
            expires: 5
            expiresAfter: write
---
apiVersion: v1
kind: Service
metadata:
  name: task-v2
  namespace: service
spec:
  type: ClusterIP
  selector:
    app: task-v2
  publishNotReadyAddresses: true
  sessionAffinity: None
  ports:
    -  name: tcp
       port: 8080
       protocol: TCP
       targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-v2
  namespace: service
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: task-v2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: task-v2
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: genaral-config
            - secretRef:
                name: db-account
          image: registry.nspace.vn:5000/task-v2:prod-1.0.0
          imagePullPolicy: Always
          name: service
          ports:
            - containerPort: 8080
              name: tcp
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: 8080
            timeoutSeconds: 2
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - name: file-config
              mountPath: /ngs/config/application.yml
              readOnly: true
              subPath: application.yml
      volumes:
        - name: file-config
          configMap:
            name: task-v2-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10